<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.neptrueworks.ordermanagement.data.mapping.OrderManifestEntityMappable">
    <select id="sortManifests" resultType="OrderItemEntity">
        SELECT `id`,
               `gross_amount`,
               `paid_at`,
               `created_at`,
               `created_by`,
               `last_modified_at`,
               `last_modified_by`,
               `is_deleted`
        FROM `order_manifest`
        <where>
            ${keyset.key}
            <if test="keyset.orientation == @org.neptrueworks.ordermanagement.data.reposition.DataSeekOrientation@FORWARD"> &lt; </if>
            <if test="keyset.orientation == @org.neptrueworks.ordermanagement.data.reposition.DataSeekOrientation@BACKWARD"> &gt; </if>
            #{keyset.value}
        </where>
        ORDER BY ${level.target}
        <if test="level.orientation == @org.neptrueworks.ordermanagement.data.reposition.DataSortOrientation@ASCENDING"> ASC</if>
        <if test="level.orientation == @org.neptrueworks.ordermanagement.data.reposition.DataSortOrientation@DESCENDING"> DESC</if>
    </select>

    <select id="fetchScalar" parameterType="int" resultType="OrderManifestEntity">
        SELECT `id`,
               `gross_amount`,
               `paid_at`,
               `created_at`,
               `created_by`,
               `last_modified_at`,
               `last_modified_by`,
               `is_deleted`
        FROM `order_manifest`
        WHERE `id` = #{id};
    </select>

    <select id="fetchAll" resultType="OrderManifestEntity">
        SELECT `id`,
               `gross_amount`,
               `paid_at`,
               `created_at`,
               `created_by`,
               `last_modified_at`,
               `last_modified_by`,
               `is_deleted`
        FROM `order_manifest`;
    </select>

    <select id="take" resultType="OrderManifestEntity">
        SELECT `id`,
               `gross_amount`,
               `paid_at`,
               `created_at`,
               `created_by`,
               `last_modified_at`,
               `last_modified_by`,
               `is_deleted`
        FROM `order_manifest`
        LIMIT #{count} OFFSET #{offset};
    </select>

    <select id="countScalar" parameterType="int" resultType="int">
        SELECT COUNT(1)
        FROM `order_manifest`
        WHERE `id` = #{id};
    </select>

    <select id="countAll" resultType="int">
        SELECT COUNT(1)
        FROM `order_manifest`;
    </select>

    <insert id="add" parameterType="OrderManifestEntity" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO order_manifest
        (`created_by`,
         `last_modified_by`)
        VALUES (#{createdBy},
                #{createdBy});
    </insert>

    <delete id="deleteScalar" parameterType="int">
        DELETE
        FROM `order_manifest`
        WHERE `id` = #{id};
    </delete>

    <update id="removeScalar" parameterType="int">
        UPDATE `order_manifest`
        SET `is_deleted` = 1,
            `last_modified_by` = #{lastModifiedBy}
        WHERE `id` = #{id};
    </update>

    <update id="resumeScalar" parameterType="int">
        UPDATE `order_manifest`
        SET `is_deleted` = 0,
            `last_modified_by` = #{lastModifiedBy}
        WHERE `id` = #{id};
    </update>

    <update id="updateGrossAmount" parameterType="OrderManifestEntity">
        UPDATE `order_manifest`
        SET `gross_amount` = #{grossAmount},
            `last_modified_by` = #{lastModifiedBy}
        WHERE `id` = #{id};
    </update>
</mapper>